{"version":3,"sources":["./src/client/app/canActivates/auth-guard.service.ts","./src/client/app/canActivates/index.ts","./src/client/app/canActivates/purchase-transaction-guard.service.ts","./src/client/app/canActivates/setting-guard.service.ts","./src/client/app/canActivates/view-type-guard.service.ts"],"names":[],"mappings":"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","file":"common-es2015.js","sourcesContent":["/**\n * AuthGuardService\n */\nimport { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { CinerinoService } from '../services/cinerino.service';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AuthGuardService implements CanActivate {\n\n    constructor(\n        private router: Router,\n        private cinerino: CinerinoService\n    ) { }\n\n    /**\n     * 認証\n     * @method canActivate\n     * @returns {Promise<boolean>}\n     */\n    public async canActivate(): Promise<boolean> {\n        try {\n            await this.cinerino.getServices();\n\n            return true;\n        } catch (error) {\n            console.log('canActivate', error);\n            this.router.navigate(['/']);\n\n            return false;\n        }\n    }\n}\n","export * from './auth-guard.service';\nexport * from './purchase-transaction-guard.service';\nexport * from './setting-guard.service';\nexport * from './view-type-guard.service';\n","/**\n * PurchaseTransactionGuardService\n */\nimport { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { ActionService } from '../services';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class PurchaseTransactionGuardService implements CanActivate {\n\n    constructor(\n        private router: Router,\n        private actionService: ActionService\n    ) { }\n\n    /**\n     * 認証\n     * @method canActivate\n     * @returns {Promise<boolean>}\n     */\n    public async canActivate(): Promise<boolean> {\n        try {\n            const transaction = (await this.actionService.purchase.getData()).transaction;\n            if (transaction === undefined) {\n                throw new Error('transaction not found');\n            }\n\n            return true;\n        } catch (error) {\n            console.log('canActivate', error);\n            this.router.navigate(['/']);\n\n            return false;\n        }\n    }\n}\n","/**\n * SettingGuardService\n */\nimport { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { select, Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport * as reducers from '../store/reducers';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class SettingGuardService implements CanActivate {\n    public user: Observable<reducers.IUserState>;\n    constructor(\n        private router: Router,\n        private store: Store<reducers.IState>\n    ) { }\n\n    /**\n     * 認証\n     * @method canActivate\n     * @returns {Promise<boolean>}\n     */\n    public async canActivate(): Promise<boolean> {\n        try {\n            this.user = this.store.pipe(select(reducers.getUser));\n            const user = await this.getUser();\n            if (user.theater === undefined) {\n                throw new Error('theater not found');\n            }\n            if (user.customerContact === undefined) {\n                throw new Error('customerContact not found');\n            }\n\n            return true;\n        } catch (error) {\n            console.log('canActivate', error);\n            this.router.navigate(['/setting']);\n\n            return false;\n        }\n    }\n\n    private async getUser() {\n        return new Promise<reducers.IUserState>((resolve) => {\n            this.user.subscribe((user) => {\n                resolve(user);\n            }).unsubscribe();\n        });\n    }\n}\n","/**\n * ViewTypeGuardService\n */\nimport { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from '@angular/router';\nimport { Models } from '..';\nimport { getEnvironment } from '../../environments/environment';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ViewTypeGuardService implements CanActivate {\n\n    constructor(\n        private router: Router\n    ) { }\n\n    /**\n     * 認証\n     * @method canActivate\n     * @returns {Promise<boolean>}\n     */\n    public async canActivate(_next: ActivatedRouteSnapshot, state: RouterStateSnapshot): Promise<boolean> {\n        try {\n            const viewType = getEnvironment().VIEW_TYPE;\n            if (state.url.match('/purchase/cinema') !== null && viewType !== Models.Util.ViewType.Cinema) {\n                throw new Error('viewType not match');\n            }\n\n            if (state.url.match('/purchase/event') !== null && viewType !== Models.Util.ViewType.Event) {\n                throw new Error('viewType not match');\n            }\n\n            return true;\n        } catch (error) {\n            console.error('canActivate', error);\n            this.router.navigate(['/error']);\n\n            return false;\n        }\n    }\n}\n"],"sourceRoot":"webpack:///"}