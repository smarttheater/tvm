{"version":3,"sources":["./src/client/app/modules/inquiry/inquiry.module.ts","./src/client/app/modules/inquiry/components/pages/inquiry-confirm/inquiry-confirm.component.ts","./src/client/app/modules/inquiry/components/pages/inquiry-confirm/inquiry-confirm.component.html","./src/client/app/modules/inquiry/components/pages/inquiry-input/inquiry-input.component.ts","./src/client/app/modules/inquiry/components/pages/inquiry-input/inquiry-input.component.html","./src/client/app/modules/inquiry/inquiry-routing.module.ts","./src/client/app/modules/inquiry/components/pages/inquiry-print/inquiry-print.component.ts","./src/client/app/modules/inquiry/components/pages/inquiry-print/inquiry-print.component.html"],"names":[],"mappings":"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","file":"modules-inquiry-inquiry-module-es2015.js","sourcesContent":["import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { SharedModule } from '../shared/shared.module';\nimport { InquiryConfirmComponent } from './components/pages/inquiry-confirm/inquiry-confirm.component';\nimport { InquiryInputComponent } from './components/pages/inquiry-input/inquiry-input.component';\nimport { InquiryPrintComponent } from './components/pages/inquiry-print/inquiry-print.component';\nimport { InquiryRoutingModule } from './inquiry-routing.module';\n\n\n@NgModule({\n  declarations: [\n    InquiryInputComponent,\n    InquiryConfirmComponent,\n    InquiryPrintComponent,\n  ],\n  imports: [\n    CommonModule,\n    InquiryRoutingModule,\n    SharedModule,\n  ]\n})\nexport class InquiryModule { }\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { factory } from '@cinerino/sdk';\nimport { select, Store } from '@ngrx/store';\nimport { TranslateService } from '@ngx-translate/core';\nimport * as moment from 'moment';\nimport { Observable } from 'rxjs';\nimport { Functions } from '../../../../..';\nimport { getEnvironment } from '../../../../../../environments/environment';\nimport { ActionService, UtilService } from '../../../../../services';\nimport * as reducers from '../../../../../store/reducers';\n\n@Component({\n    selector: 'app-inquiry-confirm',\n    templateUrl: './inquiry-confirm.component.html',\n    styleUrls: ['./inquiry-confirm.component.scss'],\n})\nexport class InquiryConfirmComponent implements OnInit, OnDestroy {\n    public order: Observable<reducers.IOrderState>;\n    public user: Observable<reducers.IUserState>;\n    public isLoading: Observable<boolean>;\n    public error: Observable<string | null>;\n    public moment: typeof moment = moment;\n    public eventOrders: Functions.Purchase.IEventOrder[];\n    public orderStatus: typeof factory.orderStatus = factory.orderStatus;\n    public environment = getEnvironment();\n    private timer: any;\n\n    constructor(\n        private store: Store<reducers.IState>,\n        private router: Router,\n        private actionService: ActionService,\n        private utilService: UtilService,\n        private translate: TranslateService\n    ) {}\n\n    public async ngOnInit() {\n        this.eventOrders = [];\n        this.order = this.store.pipe(select(reducers.getOrder));\n        this.user = this.store.pipe(select(reducers.getUser));\n        this.isLoading = this.store.pipe(select(reducers.getLoading));\n        this.error = this.store.pipe(select(reducers.getError));\n        const { order } = await this.actionService.order.getData();\n        if (order === undefined) {\n            this.router.navigate(['/error']);\n            return;\n        }\n        this.eventOrders = Functions.Purchase.order2EventOrders({ order });\n        if (this.environment.INQUIRY_PRINT_WAIT_TIME !== '') {\n            const time = Number(this.environment.INQUIRY_PRINT_WAIT_TIME);\n            this.timer = setTimeout(() => {\n                this.router.navigate(['/']);\n            }, time);\n        }\n    }\n\n    /**\n     * 破棄\n     */\n    public ngOnDestroy() {\n        if (this.timer !== undefined) {\n            clearTimeout(this.timer);\n        }\n    }\n\n    /**\n     * 印刷\n     */\n    public async print() {\n        try {\n            const orderData = await this.actionService.order.getData();\n            const user = await this.actionService.user.getData();\n            if (orderData.order === undefined) {\n                this.router.navigate(['/error']);\n                return;\n            }\n            if (user.printer === undefined) {\n                throw new Error('printer undefined');\n            }\n            const order = orderData.order;\n            const orders = [order];\n            const pos = user.pos;\n            const printer = user.printer;\n            const now = (await this.utilService.getServerTime()).date;\n            const today = moment(now).format('YYYYMMDD');\n            const eventOrders = Functions.Purchase.order2EventOrders({ order });\n            const findResult = eventOrders.find((o) => {\n                const startDate = moment(o.event.startDate).format('YYYYMMDD');\n                return startDate !== today;\n            });\n            const process = async () => {\n                // 処理\n                if (this.timer !== undefined) {\n                    clearTimeout(this.timer);\n                }\n\n                await this.actionService.order.print({ orders, pos, printer });\n                this.router.navigate(['/inquiry/print']);\n            };\n\n            if (findResult !== undefined) {\n                this.utilService.openConfirm({\n                    title: this.translate.instant('common.confirm'),\n                    body: this.translate.instant(\n                        'inquiry.confirm.confirm.printExpired'\n                    ),\n                    cb: async () => {\n                        try {\n                        } catch (error2) {\n                            console.error(error2);\n                            this.router.navigate(['/error']);\n                        }\n                        await process();\n                    },\n                });\n                return;\n            }\n            await process();\n        } catch (error) {\n            console.error(error);\n            this.router.navigate(['/stop']);\n        }\n    }\n}\n","<app-header>\n    <app-page-title title=\"{{ 'inquiry.confirm.title' | translate }}\"></app-page-title>\n</app-header>\n<div class=\"contents\">\n    <div class=\"container h-100 px-3 pb-3\">\n        <div class=\"row h-100\">\n            <div class=\"col-3 h-100\">\n            </div>\n            <div class=\"col-6 mh-100 scroll-horizontal\">\n                <div class=\"mb-4\">\n                    <div class=\"row align-items-center\">\n                        <p class=\"col-4\">\n                            {{ 'common.confirmationNumber' | translate }}</p>\n                        <p class=\"col-8 text-large font-weight-bold\">\n                            {{ (order | async)?.order.confirmationNumber }}\n                        </p>\n                    </div>\n                </div>\n                <div *ngFor=\"let eventOrder of eventOrders\" class=\"mb-4 bg-light-gray p-3\">\n                    <div class=\"mb-3\">\n                        <div class=\"mb-1\">\n                            <p class=\"font-weight-bold text-large\">{{ eventOrder.event.name | changeLanguage }}</p>\n                            <p class=\"text-small\"\n                                *ngIf=\"eventOrder.event.superEvent.headline && (eventOrder.event.superEvent.headline | changeLanguage)\">\n                                {{ eventOrder.event.superEvent.headline | changeLanguage }}</p>\n                            <p class=\"text-small\"\n                                *ngIf=\"eventOrder.event.superEvent.description && (eventOrder.event.superEvent.description | changeLanguage)\">\n                                {{\n                                eventOrder.event.superEvent.description | changeLanguage }}</p>\n                        </div>\n                        <p class=\"mb-1\">\n                            {{ eventOrder.event.startDate | formatDate: 'MM/DD(ddd) HH:mm' }}-{{\n                            eventOrder.event.endDate | formatDate: 'HH:mm' }}\n                        </p>\n                        <p class=\"text-small mb-1\">\n                            <span class=\"theater-name\">{{ eventOrder.event.superEvent.location.name | changeLanguage\n                                }}</span>\n                            <span class=\"screen-name\">&nbsp;/&nbsp;<span\n                                    *ngIf=\"eventOrder.event.location.address | changeLanguage\" class=\"mr-2\">{{\n                                    eventOrder.event.location.address | changeLanguage }}</span>{{\n                                eventOrder.event.location.name | changeLanguage }}</span>\n                            <span\n                                *ngIf=\"eventOrder.event.workPerformed?.duration && moment.duration(eventOrder.event.workPerformed?.duration).asMinutes() > 0\">\n                                &nbsp;/&nbsp;<span class=\"mr-1\">{{ 'common.duration' | translate }}</span>{{\n                                moment.duration(eventOrder.event.workPerformed?.duration).asMinutes() }}{{\n                                'common.date.minute' | translate }}\n                            </span>\n                        </p>\n                    </div>\n                    <hr class=\"border-top border-gray mb-3\">\n                    <app-item-list [acceptedOffers]=\"eventOrder.data\"></app-item-list>\n                </div>\n            </div>\n            <div class=\"col-3\">\n\n            </div>\n        </div>\n    </div>\n</div>\n<app-footer>\n    <div class=\"container h-100\">\n        <div class=\"row align-items-center justify-content-end h-100\">\n            <div class=\"col-2\">\n                <button type=\"button\" class=\"btn btn-custom-secondary btn-block py-2\" routerLink=\"/\">\n                    {{ 'common.clear' | translate }}\n                </button>\n            </div>\n            <div class=\"col-2\">\n                <button type=\"button\" class=\"text-large btn btn-custom-secondary btn-block font-weight-bold py-3\"\n                    routerLink=\"/inquiry/input\">\n                    {{ 'inquiry.confirm.prev' | translate }}\n                </button>\n            </div>\n            <div class=\"col-2\">\n                <button *ngIf=\"environment.INQUIRY_PRINT\"\n                    [disabled]=\"(order | async)?.order.orderStatus !== orderStatus.OrderDelivered\" type=\"button\"\n                    class=\"text-large btn btn-custom-primary btn-block font-weight-bold py-3\" (click)=\"print()\">\n                    {{ 'inquiry.confirm.next' | translate }}\n                </button>\n            </div>\n        </div>\n    </div>\n</app-footer>","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { AbstractControl, FormBuilder, FormGroup, ValidationErrors, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { select, Store } from '@ngrx/store';\nimport { TranslateService } from '@ngx-translate/core';\nimport * as libphonenumber from 'libphonenumber-js';\nimport { Observable } from 'rxjs';\nimport { getEnvironment } from '../../../../../../environments/environment';\nimport { ActionService, UtilService } from '../../../../../services';\nimport * as reducers from '../../../../../store/reducers';\n\n@Component({\n    selector: 'app-inquiry-input',\n    templateUrl: './inquiry-input.component.html',\n    styleUrls: ['./inquiry-input.component.scss']\n})\nexport class InquiryInputComponent implements OnInit, OnDestroy {\n    public inquiryForm: FormGroup;\n    public environment = getEnvironment();\n    public isLoading: Observable<boolean>;\n    private timer: any;\n\n    constructor(\n        private store: Store<reducers.IState>,\n        private formBuilder: FormBuilder,\n        private utilService: UtilService,\n        private actionService: ActionService,\n        private router: Router,\n        private translate: TranslateService\n    ) { }\n\n    public ngOnInit() {\n        this.isLoading = this.store.pipe(select(reducers.getLoading));\n        this.createInquiryForm();\n        if (this.environment.INQUIRY_PRINT_WAIT_TIME !== '') {\n            const time = Number(this.environment.INQUIRY_PRINT_WAIT_TIME);\n            this.timer = setTimeout(() => {\n                this.router.navigate(['/']);\n            }, time);\n        }\n    }\n\n    /**\n     * 破棄\n     */\n    public ngOnDestroy() {\n        if (this.timer !== undefined) {\n            clearTimeout(this.timer);\n        }\n    }\n\n    /**\n     * 照会フォーム作成\n     */\n    private createInquiryForm() {\n        const TEL_MAX_LENGTH = 15;\n        const TEL_MIN_LENGTH = 9;\n        this.inquiryForm = this.formBuilder.group({\n            confirmationNumber: ['', [\n                Validators.required,\n                Validators.pattern(/^[0-9]+$/)\n            ]],\n            telephone: ['', [\n                Validators.required,\n                Validators.maxLength(TEL_MAX_LENGTH),\n                Validators.minLength(TEL_MIN_LENGTH),\n                (control: AbstractControl): ValidationErrors | null => {\n                    const field = control.root.get('telephone');\n                    if (field !== null) {\n                        if (field.value === '') {\n                            return null;\n                        }\n                        const parsedNumber = (new RegExp(/^\\+/).test(field.value))\n                            ? libphonenumber.parse(field.value)\n                            : libphonenumber.parse(field.value, 'JP');\n                        if (parsedNumber.phone === undefined) {\n                            return { telephone: true };\n                        }\n                        const isValid = libphonenumber.isValidNumber(parsedNumber);\n                        if (!isValid) {\n                            return { telephone: true };\n                        }\n                    }\n\n                    return null;\n                }\n            ]]\n        });\n    }\n\n    /**\n     * 照会\n     */\n    public async onSubmit() {\n        Object.keys(this.inquiryForm.controls).forEach((key) => {\n            this.inquiryForm.controls[key].markAsTouched();\n        });\n        this.inquiryForm.controls.confirmationNumber.setValue((<HTMLInputElement>document.getElementById('confirmationNumber')).value);\n        this.inquiryForm.controls.telephone.setValue((<HTMLInputElement>document.getElementById('telephone')).value);\n        if (this.inquiryForm.invalid) {\n            return;\n        }\n        try {\n            const confirmationNumber = this.inquiryForm.controls.confirmationNumber.value;\n            const telephone = this.inquiryForm.controls.telephone.value;\n            await this.actionService.order.inquiry({\n                confirmationNumber,\n                customer: { telephone }\n            });\n            this.router.navigate(['/inquiry/confirm']);\n        } catch (error) {\n            this.utilService.openAlert({\n                title: this.translate.instant('common.error'),\n                body: this.translate.instant('inquiry.input.validation')\n            });\n        }\n    }\n\n    /**\n     * 確認番号変更\n     */\n    public changeConfirmationNumber(value: string) {\n        this.inquiryForm.controls.confirmationNumber.setValue(value);\n    }\n\n    /**\n     * 電話番号変更\n     */\n    public changeTelephone(value: string) {\n        this.inquiryForm.controls.telephone.setValue(value);\n    }\n\n}\n","<form [formGroup]=\"inquiryForm\">\n    <app-header>\n        <app-page-title title=\"{{ 'inquiry.input.title' | translate }}\"></app-page-title>\n    </app-header>\n\n    <div class=\"contents\">\n        <div class=\"container h-100 px-3 pb-3\">\n            <div class=\"row h-100\">\n                <div class=\"col-3 h-100\">\n                    <img class=\"w-100 p-3 border border-gray\" src=\"/default/images/inquiry/input.svg\">\n                </div>\n                <div class=\"col-6\">\n                    <div class=\"mb-4\">\n                        <div class=\"inquiry-form mx-auto p-3 bg-white\">\n\n                            <div class=\"form-group\">\n                                <label class=\"mb-3 font-weight-bold\" for=\"\">{{ 'common.confirmationNumber' | translate\n                                    }}</label>\n                                <app-numeric-keypad *ngIf=\"environment.INPUT_KEYPAD\" inputType=\"string\"\n                                    [inputValue]=\"inquiryForm.controls.confirmationNumber.value\"\n                                    (change)=\"changeConfirmationNumber($event)\">\n                                    <input type=\"text\" class=\"form-control\" formControlName=\"confirmationNumber\"\n                                        id=\"confirmationNumber\"\n                                        [placeholder]=\"'form.placeholder.confirmationNumber' | translate\" readonly>\n                                </app-numeric-keypad>\n                                <input *ngIf=\"!environment.INPUT_KEYPAD\" type=\"text\" class=\"form-control\"\n                                    formControlName=\"confirmationNumber\" id=\"confirmationNumber\"\n                                    [placeholder]=\"'form.placeholder.confirmationNumber' | translate\">\n                                <div *ngIf=\"inquiryForm.controls.confirmationNumber.invalid && inquiryForm.controls.confirmationNumber.touched\"\n                                    class=\"mt-2\">\n                                    <p *ngIf=\"inquiryForm.controls.confirmationNumber.errors?.required\"\n                                        class=\"text-danger\">\n                                        {{ 'form.validation.required' | translate }}</p>\n                                    <p *ngIf=\"inquiryForm.controls.confirmationNumber.errors?.pattern\"\n                                        class=\"text-danger\">\n                                        {{ 'form.validation.number' | translate }}</p>\n                                </div>\n                            </div>\n                            <div class=\"form-group mb-0\">\n                                <label class=\"mb-3 font-weight-bold\" for=\"\">{{ 'common.telephone' | translate }}</label>\n                                <app-numeric-keypad *ngIf=\"environment.INPUT_KEYPAD\" inputType=\"telephone\"\n                                    [inputValue]=\"inquiryForm.controls.telephone.value\"\n                                    (change)=\"changeTelephone($event)\">\n                                    <input type=\"password\" class=\"form-control\" formControlName=\"telephone\"\n                                        id=\"telephone\" [placeholder]=\"'form.placeholder.telephone' | translate\"\n                                        readonly>\n                                </app-numeric-keypad>\n                                <input *ngIf=\"!environment.INPUT_KEYPAD\" type=\"password\" class=\"form-control\"\n                                    formControlName=\"telephone\" id=\"telephone\"\n                                    [placeholder]=\"'form.placeholder.telephone' | translate\">\n                                <div *ngIf=\"inquiryForm.controls.telephone.invalid && inquiryForm.controls.telephone.touched\"\n                                    class=\"mt-2\">\n                                    <p *ngIf=\"inquiryForm.controls.telephone.errors?.required\" class=\"text-danger\">\n                                        {{ 'form.validation.required' | translate }}</p>\n                                    <p *ngIf=\"inquiryForm.controls.telephone.errors?.minlength\" class=\"text-danger\">\n                                        {{ 'form.validation.minlength' | translate: { value:\n                                        inquiryForm.controls.telephone.errors?.minlength.requiredLength } }}\n                                    </p>\n                                    <p *ngIf=\"inquiryForm.controls.telephone.errors?.maxlength\" class=\"text-danger\">\n                                        {{ 'form.validation.maxlength' | translate: { value:\n                                        inquiryForm.controls.telephone.errors?.maxlength.requiredLength } }}\n                                    </p>\n                                    <p *ngIf=\"inquiryForm.controls.telephone.errors?.telephone\" class=\"text-danger\">\n                                        {{ 'form.validation.telephone' | translate }}</p>\n                                </div>\n                            </div>\n\n                        </div>\n                    </div>\n                </div>\n                <div class=\"col-3\">\n\n                </div>\n            </div>\n        </div>\n    </div>\n    <app-footer>\n        <div class=\"container h-100\">\n            <div class=\"row align-items-center justify-content-end h-100\">\n                <div class=\"col-2\">\n                    <button type=\"button\" class=\"btn btn-custom-secondary btn-block py-2\" routerLink=\"/\">\n                        {{ 'common.clear' | translate }}\n                    </button>\n                </div>\n                <div class=\"col-2\">\n                    <button type=\"button\" class=\"text-large btn btn-custom-secondary btn-block font-weight-bold py-3\"\n                        routerLink=\"/\">\n                        {{ 'inquiry.input.prev' | translate }}\n                    </button>\n                </div>\n                <div class=\"col-2\">\n                    <button type=\"submit\" [disabled]=\"isLoading | async\"\n                        class=\"text-large btn btn-custom-primary btn-block font-weight-bold py-3\" (click)=\"onSubmit()\">\n                        {{ 'inquiry.input.next' | translate }}\n                    </button>\n                </div>\n            </div>\n        </div>\n    </app-footer>\n</form>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AuthGuardService, SettingGuardService } from '../../canActivates';\nimport { BaseComponent } from '../shared/components/pages/base/base.component';\nimport { InquiryConfirmComponent } from './components/pages/inquiry-confirm/inquiry-confirm.component';\nimport { InquiryInputComponent } from './components/pages/inquiry-input/inquiry-input.component';\nimport { InquiryPrintComponent } from './components/pages/inquiry-print/inquiry-print.component';\n\n\nconst routes: Routes = [{\n  path: '',\n  component: BaseComponent,\n  canActivate: [AuthGuardService, SettingGuardService],\n  children: [\n    { path: 'input', component: InquiryInputComponent },\n    { path: 'confirm', component: InquiryConfirmComponent },\n    { path: 'print', component: InquiryPrintComponent }\n  ]\n}];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class InquiryRoutingModule { }\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { select, Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { getEnvironment } from '../../../../../../environments/environment';\nimport * as reducers from '../../../../../store/reducers';\n\n@Component({\n    selector: 'app-inquiry-print',\n    templateUrl: './inquiry-print.component.html',\n    styleUrls: ['./inquiry-print.component.scss']\n})\nexport class InquiryPrintComponent implements OnInit, OnDestroy {\n    public order: Observable<reducers.IOrderState>;\n    public environment = getEnvironment();\n    private timer: any;\n\n    constructor(\n        private store: Store<reducers.IState>,\n        private router: Router\n    ) { }\n\n    /**\n     * 初期化\n     */\n    public ngOnInit() {\n        this.order = this.store.pipe(select(reducers.getOrder));\n        if (this.environment.PRINT_SUCCESS_WAIT_TIME === '') {\n            return;\n        }\n        const time = Number(this.environment.PRINT_SUCCESS_WAIT_TIME);\n        this.timer = setTimeout(() => {\n            this.router.navigate(['/']);\n        }, time);\n    }\n\n    /**\n     * 破棄\n     */\n    public ngOnDestroy() {\n        if (this.timer !== undefined) {\n            clearTimeout(this.timer);\n        }\n    }\n\n}\n","<app-header>\n    <app-page-title title=\"{{ 'inquiry.print.title' | translate }}\"></app-page-title>\n</app-header>\n<div class=\"contents\">\n    <div class=\"container h-100 px-3 pb-3\">\n        <div class=\"row h-100\">\n            <div class=\"col-3 h-100\">\n                <div class=\"h-100\"></div>\n            </div>\n            <div class=\"col-6\">\n                <app-print-result *ngIf=\"(order | async)?.order\" [order]=\"(order | async)?.order\"></app-print-result>\n            </div>\n            <div class=\"col-3\">\n\n            </div>\n        </div>\n    </div>\n</div>\n<app-footer>\n    <div class=\"container h-100\">\n        <div class=\"row align-items-center justify-content-end h-100\">\n            <div class=\"col-2\">\n                <button type=\"button\" class=\"btn btn-custom-secondary btn-block py-2\" routerLink=\"/\">\n                    {{ 'common.clear' | translate }}\n                </button>\n            </div>\n            <div class=\"col-2\">\n                <button type=\"button\" class=\"text-large btn btn-custom-secondary btn-block font-weight-bold py-3\"\n                    disabled>\n                    {{ 'inquiry.print.prev' | translate }}\n                </button>\n            </div>\n            <div class=\"col-2\">\n                <button type=\"button\" class=\"text-large btn btn-custom-primary btn-block font-weight-bold py-3\"\n                    routerLink=\"/\">\n                    {{ 'inquiry.print.next' | translate }}\n                </button>\n            </div>\n        </div>\n    </div>\n</app-footer>"],"sourceRoot":"webpack:///"}