{"version":3,"sources":["./src/client/app/modules/setting/components/parts/input-customer/input-customer.component.ts","./src/client/app/modules/setting/components/parts/input-customer/input-customer.component.html","./src/client/app/modules/setting/setting.module.ts","./src/client/app/modules/setting/setting-routing.module.ts","./src/client/app/modules/setting/components/parts/input-app/input-app.component.ts","./src/client/app/modules/setting/components/parts/input-app/input-app.component.html","./src/client/app/modules/setting/components/pages/setting/setting.component.ts","./src/client/app/modules/setting/components/pages/setting/setting.component.html","./src/client/app/modules/setting/components/parts/input-device/input-device.component.ts","./src/client/app/modules/setting/components/parts/input-device/input-device.component.html"],"names":[],"mappings":"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","file":"modules-setting-setting-module-es2015.js","sourcesContent":["import {\n    Component,\n    EventEmitter,\n    Input,\n    OnDestroy,\n    OnInit,\n    Output,\n    ViewChild,\n} from '@angular/core';\nimport {\n    AbstractControl,\n    FormBuilder,\n    FormControl,\n    FormGroup,\n    ValidatorFn,\n    Validators,\n} from '@angular/forms';\nimport { factory } from '@cinerino/sdk';\nimport { TranslateService } from '@ngx-translate/core';\nimport {\n    CountryISO,\n    NgxIntlTelInputComponent,\n    SearchCountryField,\n} from 'ngx-intl-tel-input';\nimport { Subscription } from 'rxjs';\nimport { getEnvironment } from '../../../../../../environments/environment';\nimport { LibphonenumberFormatPipe } from '../../../../shared/pipes/libphonenumber-format.pipe';\n\n@Component({\n    selector: 'app-input-customer',\n    templateUrl: './input-customer.component.html',\n    styleUrls: ['./input-customer.component.scss'],\n})\nexport class InputCustomerComponent implements OnInit, OnDestroy {\n    public environment = getEnvironment();\n    public SearchCountryField = SearchCountryField;\n    public CountryISO = CountryISO;\n    public formGroup: FormGroup;\n    public subscription?: Subscription;\n    @Input() public profile?: factory.person.IProfile;\n    @Input() public language: string;\n    @Output() public valueChanges = new EventEmitter<FormGroup>();\n    @ViewChild('intlTelInput') private intlTelInput: NgxIntlTelInputComponent;\n\n    constructor(\n        private translate: TranslateService,\n        private formBuilder: FormBuilder\n    ) {}\n\n    public ngOnInit() {\n        this.formGroup = this.createForm();\n        this.valueChanges.emit(this.formGroup);\n        this.subscription = this.formGroup.valueChanges.subscribe(() => {\n            this.valueChanges.emit(this.formGroup);\n        });\n        setTimeout(() => {\n            if (this.intlTelInput === undefined) {\n                return;\n            }\n            const findResult = this.intlTelInput.allCountries.find(\n                (c) => c.iso2 === CountryISO.Japan\n            );\n            if (findResult === undefined) {\n                return;\n            }\n            findResult.placeHolder = this.translate.instant(\n                'form.placeholder.telephone'\n            );\n        }, 0);\n    }\n\n    public ngOnDestroy() {\n        if (this.subscription === undefined) {\n            return;\n        }\n        this.subscription.unsubscribe();\n    }\n\n    /**\n     * フォーム作成\n     */\n    private createForm() {\n        const profile = this.environment.PROFILE;\n        const formGroup = this.formBuilder.group({});\n        profile.forEach((p) => {\n            const validators: ValidatorFn[] = [];\n            if (p.required !== undefined && p.required) {\n                validators.push(Validators.required);\n            }\n            if (p.maxLength !== undefined) {\n                validators.push(Validators.maxLength(p.maxLength));\n            }\n            if (p.minLength !== undefined) {\n                validators.push(Validators.minLength(p.minLength));\n            }\n            if (p.pattern !== undefined) {\n                validators.push(Validators.pattern(p.pattern));\n            }\n            if (p.key === 'familyName' || p.key === 'givenName') {\n                validators.push((control: AbstractControl) => {\n                    const field = control.root.get(p.key);\n                    const language = document.documentElement.lang;\n                    if (field !== null) {\n                        if (field.value === '') {\n                            return null;\n                        }\n                        if (\n                            language === 'ja' &&\n                            !new RegExp(/^[ァ-ヶー]+$/).test(field.value)\n                        ) {\n                            return { customPattern: true };\n                        }\n                        if (\n                            language !== 'ja' &&\n                            !new RegExp(/^[a-z]+$/).test(field.value)\n                        ) {\n                            return { customPattern: true };\n                        }\n                    }\n\n                    return null;\n                });\n            }\n            if (p.key === 'email') {\n                validators.push(Validators.email);\n            }\n            formGroup.addControl(p.key, new FormControl(p.value, validators));\n        });\n        if (this.profile === undefined) {\n            return formGroup;\n        }\n        // プロフィール設定\n        Object.keys(this.profile).forEach((key) => {\n            const value = (<any>this.profile)[key];\n            if (value === undefined || formGroup.controls[key] === undefined) {\n                return;\n            }\n            if (key === 'telephone') {\n                formGroup.controls.telephone.setValue(\n                    new LibphonenumberFormatPipe().transform(value)\n                );\n                return;\n            }\n            formGroup.controls[key].setValue(value);\n        });\n        const additionalProperty = this.profile.additionalProperty;\n        if (additionalProperty !== undefined) {\n            additionalProperty.forEach((a) => {\n                const key = `additionalProperty.${a.name}`;\n                const value = a.value;\n                if (\n                    value === undefined ||\n                    formGroup.controls[key] === undefined\n                ) {\n                    return;\n                }\n                formGroup.controls[key].setValue(value);\n            });\n        }\n        return formGroup;\n    }\n\n    /**\n     * 必須判定\n     */\n    public isRequired(key: String) {\n        return (\n            this.environment.PROFILE.find(\n                (p) => p.key === key && p.required\n            ) !== undefined\n        );\n    }\n\n    /**\n     * 購入者情報フォームのコントロールkeyを配列で返却\n     */\n    public getProfileFormKeys() {\n        return Object.keys(this.formGroup.controls);\n    }\n\n    /**\n     * プロフィール項目取得\n     */\n    public getProfileProperty(key: string) {\n        return this.environment.PROFILE.find((p) => p.key === key);\n    }\n\n    /**\n     * 追加特性項目取得\n     */\n    public getAdditionalProperty(key: string) {\n        return this.environment.PROFILE.find(\n            (p) => /additionalProperty/.test(p.key) && p.key === key\n        );\n    }\n\n    /**\n     * クリップボードへコピー\n     */\n    public copyDomain() {\n        const str = this.translate.instant('email.domain');\n        const element = document.createElement('textarea');\n        element.value = str;\n        element.selectionStart = 0;\n        element.selectionEnd = element.value.length;\n        document.body.appendChild(element);\n        element.focus();\n        document.execCommand('copy');\n        element.blur();\n        document.body.removeChild(element);\n    }\n}\n","<form [formGroup]=\"formGroup\">\n    <div *ngFor=\"let key of getProfileFormKeys()\" class=\"form-group row align-items-center\">\n        <div class=\"col-md-4 py-2 text-md-right \">\n            <div class=\"d-inline-flex align-items-center\">\n                <p *ngIf=\"!getAdditionalProperty(key)\">{{ 'form.label.' + key | translate }}</p>\n                <p *ngIf=\"getAdditionalProperty(key)\">\n                    {{ getAdditionalProperty(key)?.label | changeLanguage }}</p>\n                <p *ngIf=\"isRequired(key)\" class=\"badge badge-danger ml-2\">{{ 'form.required' | translate }}\n                </p>\n            </div>\n        </div>\n        <div class=\"col-md-8\">\n            <input *ngIf=\"key !== 'email' && key !== 'telephone' && key !== 'gender' && !getAdditionalProperty(key)\"\n                type=\"text\" class=\"form-control\" [formControlName]=\"key\" [id]=\"key\"\n                [placeholder]=\"'form.placeholder.' + key | translate\">\n            <input *ngIf=\"key === 'email'\" type=\"email\" class=\"form-control\" [formControlName]=\"key\" [id]=\"key\"\n                [placeholder]=\"'form.placeholder.' + key | translate\">\n            <ngx-intl-tel-input *ngIf=\"key === 'telephone'\" #intlTelInput [preferredCountries]=\"[CountryISO.Japan]\"\n                [enableAutoCountrySelect]=\"false\" [enablePlaceholder]=\"true\" [searchCountryFlag]=\"true\"\n                [searchCountryField]=\"[SearchCountryField.Iso2, SearchCountryField.Name]\" [selectFirstCountry]=\"false\"\n                [selectedCountryISO]=\"CountryISO.Japan\" [maxLength]=\"15\" [phoneValidation]=\"true\"\n                [separateDialCode]=\"false\" inputId=\"telephone\" name=\"telephone\" formControlName=\"telephone\">\n            </ngx-intl-tel-input>\n            <select *ngIf=\"key === 'gender'\" class=\"form-control\" [formControlName]=\"key\" [id]=\"key\">\n                <option *ngFor=\"let option of getProfileProperty(key)?.option\" [value]=\"option.value\">\n                    {{ option.label | changeLanguage }}\n                </option>\n            </select>\n            <input *ngIf=\"getAdditionalProperty(key) && getAdditionalProperty(key)?.inputType === 'input'\" type=\"text\"\n                class=\"form-control\" [formControlName]=\"key\" [id]=\"key\" placeholder=\"\">\n            <textarea *ngIf=\"getAdditionalProperty(key) && getAdditionalProperty(key)?.inputType === 'textarea'\"\n                class=\"form-control\" [formControlName]=\"key\" [id]=\"key\" placeholder=\"\"></textarea>\n            <select *ngIf=\"getAdditionalProperty(key) && getAdditionalProperty(key)?.inputType === 'select'\"\n                class=\"form-control\" [formControlName]=\"key\" [id]=\"key\" placeholder=\"\">\n                <option *ngFor=\"let option of getAdditionalProperty(key)?.option\" [value]=\"option.value\">\n                    {{ option.label | changeLanguage }}\n                </option>\n            </select>\n            <div *ngIf=\"formGroup.controls[key].invalid && formGroup.controls[key].touched\" class=\"mt-2\">\n                <p *ngIf=\"formGroup.controls[key].errors?.required\" class=\"text-danger\">\n                    {{ 'form.validation.required' | translate }}\n                </p>\n                <p *ngIf=\"formGroup.controls[key].errors?.maxlength\" class=\"text-danger\">\n                    {{ 'form.validation.maxlength' | translate:{ value:\n                    formGroup.controls[key].errors?.maxlength.requiredLength } }}\n                </p>\n                <p *ngIf=\"formGroup.controls[key].errors?.minlength\" class=\"text-danger\">\n                    {{ 'form.validation.minlength' | translate:{ value:\n                    formGroup.controls[key].errors?.minlength.requiredLength } }}\n                </p>\n                <p *ngIf=\"formGroup.controls[key].errors?.email\" class=\"text-danger\">\n                    {{ 'form.validation.email' | translate }}\n                </p>\n                <p *ngIf=\"formGroup.controls[key].errors?.validatePhoneNumber\" class=\"text-danger\">\n                    {{ 'form.validation.telephone' | translate }}\n                </p>\n                <div *ngIf=\"key === 'familyName' || key === 'givenName'\">\n                    <p *ngIf=\"language === 'ja' && formGroup.controls[key].errors?.customPattern\" class=\"text-danger\">\n                        {{ 'form.validation.fullKana' | translate }}</p>\n                    <p *ngIf=\"language !== 'ja' && formGroup.controls[key].errors?.customPattern\" class=\"text-danger\">\n                        {{ 'form.validation.lowercaseLetters' | translate }}</p>\n                </div>\n                <p *ngIf=\"formGroup.controls[key].errors?.pattern\" class=\"text-danger\">\n                    {{ 'form.validation.pattern' | translate }}\n                </p>\n            </div>\n\n        </div>\n    </div>\n</form>","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { SharedModule } from '../shared/shared.module';\nimport { SettingComponent } from './components/pages/setting/setting.component';\nimport { InputAppComponent } from './components/parts/input-app/input-app.component';\nimport { InputCustomerComponent } from './components/parts/input-customer/input-customer.component';\nimport { InputDeviceComponent } from './components/parts/input-device/input-device.component';\nimport { SettingRoutingModule } from './setting-routing.module';\n\n@NgModule({\n    declarations: [\n        SettingComponent,\n        InputAppComponent,\n        InputCustomerComponent,\n        InputDeviceComponent,\n    ],\n    imports: [CommonModule, SettingRoutingModule, SharedModule],\n})\nexport class SettingModule {}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { BaseComponent } from '../shared/components/pages/base/base.component';\nimport { SettingComponent } from './components/pages/setting/setting.component';\n\n\nconst routes: Routes = [{\n  path: '',\n  component: BaseComponent,\n  children: [\n    { path: '', component: SettingComponent }\n  ]\n}];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class SettingRoutingModule { }\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    OnDestroy,\n    OnInit,\n    Output,\n} from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { factory } from '@cinerino/sdk';\nimport { Subscription } from 'rxjs';\nimport { Models } from '../../../../..';\nimport { getEnvironment } from '../../../../../../environments/environment';\n\n@Component({\n    selector: 'app-input-app',\n    templateUrl: './input-app.component.html',\n    styleUrls: ['./input-app.component.scss'],\n})\nexport class InputAppComponent implements OnInit, OnDestroy {\n    public environment = getEnvironment();\n    public formGroup: FormGroup;\n    public subscription?: Subscription;\n    public posList: factory.chevre.place.movieTheater.IPOS[];\n    public applicationType = Models.Util.Application.ApplicationType;\n    @Input() public data: {\n        theater?: factory.chevre.place.movieTheater.IPlaceWithoutScreeningRoom;\n        pos?: factory.chevre.place.movieTheater.IPOS;\n        applicationType?: Models.Util.Application.ApplicationType;\n        applicationPassword?: string;\n    };\n    @Input()\n    public theaters: factory.chevre.place.movieTheater.IPlaceWithoutScreeningRoom[];\n    @Output() public valueChanges = new EventEmitter<FormGroup>();\n\n    constructor(private formBuilder: FormBuilder) {}\n\n    public ngOnInit() {\n        this.posList = [];\n        this.formGroup = this.createForm();\n        const { theater, pos, applicationType, applicationPassword } =\n            this.data;\n        if (theater !== undefined) {\n            this.formGroup.controls.theaterId.setValue(theater.id);\n            this.changeTheater();\n        }\n        if (pos !== undefined) {\n            this.formGroup.controls.posId.setValue(pos.id);\n        }\n        if (applicationType !== undefined) {\n            this.formGroup.controls.applicationType.setValue(applicationType);\n        }\n        if (applicationPassword !== undefined) {\n            this.formGroup.controls.applicationPassword.setValue(\n                applicationPassword\n            );\n        }\n        this.valueChanges.emit(this.formGroup);\n        this.subscription = this.formGroup.valueChanges.subscribe(() => {\n            this.valueChanges.emit(this.formGroup);\n        });\n    }\n\n    public ngOnDestroy() {\n        if (this.subscription === undefined) {\n            return;\n        }\n        this.subscription.unsubscribe();\n    }\n\n    /**\n     * フォーム作成\n     */\n    private createForm() {\n        const formGroup = this.formBuilder.group({\n            theaterId: ['', [Validators.required]],\n            posId: [''],\n            applicationType: [''],\n            applicationPassword: [''],\n        });\n\n        return formGroup;\n    }\n\n    /**\n     * 必須判定\n     */\n    public isRequired(key: String) {\n        if (key === 'theaterId') {\n            return true;\n        }\n        return (\n            this.environment.PROFILE.find(\n                (p) => p.key === key && p.required\n            ) !== undefined\n        );\n    }\n\n    /**\n     * 購入者情報フォームのコントロールkeyを配列で返却\n     */\n    public getProfileFormKeys() {\n        return Object.keys(this.formGroup.controls);\n    }\n\n    /**\n     * プロフィール項目取得\n     */\n    public getProfileProperty(key: string) {\n        return this.environment.PROFILE.find((p) => p.key === key);\n    }\n\n    /**\n     * 追加特性項目取得\n     */\n    public getAdditionalProperty(key: string) {\n        return this.environment.PROFILE.find(\n            (p) => /additionalProperty/.test(p.key) && p.key === key\n        );\n    }\n\n    public changeTheater() {\n        this.formGroup.controls.posId.setValue('');\n        const theaterId = this.formGroup.controls.theaterId.value;\n        const findResult = this.theaters.find((t) => t.id === theaterId);\n        if (theaterId === '' || findResult === undefined) {\n            this.posList = [];\n            return;\n        }\n        this.posList = findResult.hasPOS === undefined ? [] : findResult.hasPOS;\n    }\n}\n","<form [formGroup]=\"formGroup\">\n    <ng-container *ngFor=\"let key of getProfileFormKeys()\">\n        <div *ngIf=\"!(key === 'posId' && posList.length === 0)\" class=\"form-group row align-items-center\">\n            <div class=\"col-4 py-2 text-right\">\n                <div class=\"d-inline-flex align-items-center\">\n                    <p *ngIf=\"!(key === 'applicationType' || key === 'applicationPassword')\">\n                        {{ 'form.label.' + key | translate }}\n                    </p>\n                    <p *ngIf=\"key === 'applicationType' || key === 'applicationPassword'\">\n                        {{ 'setting.application.' + key + '.label' | translate }}\n                    </p>\n                    <p *ngIf=\"isRequired(key)\" class=\"badge badge-danger ml-2\">{{ 'form.required' |\n                        translate }}\n                    </p>\n                </div>\n            </div>\n            <div class=\"col-8\">\n                <select *ngIf=\"key === 'theaterId'\" class=\"form-control\" [formControlName]=\"key\"\n                    (change)=\"changeTheater()\">\n                    <option value=\"\">{{ 'setting.unselected' | translate }}</option>\n                    <option *ngFor=\"let theater of theaters\" [value]=\"theater.id\">\n                        {{ theater.name | changeLanguage }}</option>\n                </select>\n                <select *ngIf=\"key === 'posId'\" class=\"form-control\" [formControlName]=\"key\">\n                    <option value=\"\">{{ 'setting.unselected' | translate }}</option>\n                    <option *ngFor=\"let pos of posList\" [value]=\"pos.id\">{{ pos.name }}</option>\n                </select>\n                <select *ngIf=\"key === 'applicationType'\" class=\"form-control\" [formControlName]=\"key\">\n                    <option [value]=\"applicationType.Tvm\">\n                        {{ 'setting.application.applicationType.option.tvm' | translate }}\n                    </option>\n                    <option [value]=\"applicationType.Printer\">\n                        {{ 'setting.application.applicationType.option.printer' | translate }}\n                    </option>\n                </select>\n                <ng-container *ngIf=\"key === 'applicationPassword'\">\n                    <app-numeric-keypad *ngIf=\"environment.INPUT_KEYPAD\" inputType=\"string\"\n                        [inputValue]=\"formGroup.controls.applicationPassword.value\"\n                        (change)=\"formGroup.controls.applicationPassword.setValue($event)\">\n                        <input type=\"password\" class=\"form-control\" [formControlName]=\"key\" readonly>\n                    </app-numeric-keypad>\n                    <input *ngIf=\"!environment.INPUT_KEYPAD\" type=\"password\" class=\"form-control\"\n                        [formControlName]=\"key\">\n                </ng-container>\n\n\n            </div>\n        </div>\n    </ng-container>\n</form>","import { Component, OnInit } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { factory } from '@cinerino/sdk';\nimport { select, Store } from '@ngrx/store';\nimport { TranslateService } from '@ngx-translate/core';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { Observable } from 'rxjs';\nimport { Models } from '../../../../..';\nimport { getEnvironment } from '../../../../../../environments/environment';\nimport {\n    ActionService,\n    CinerinoService,\n    EpsonEPOSService,\n    MasterService,\n    PaymentService,\n    UtilService,\n} from '../../../../../services';\nimport * as reducers from '../../../../../store/reducers';\nimport { CaschcangerCountModalComponent } from '../../../../shared/components/parts/caschcanger/count-modal/count-modal.component';\n\n@Component({\n    selector: 'app-setting',\n    templateUrl: './setting.component.html',\n    styleUrls: ['./setting.component.scss'],\n})\nexport class SettingComponent implements OnInit {\n    public user: Observable<reducers.IUserState>;\n    public master: Observable<reducers.IMasterState>;\n    public error: Observable<string | null>;\n    public isLoading: Observable<boolean>;\n    public posList: { id: string; name: string; typeOf: string }[];\n    public theaters: factory.chevre.place.movieTheater.IPlaceWithoutScreeningRoom[];\n    public environment = getEnvironment();\n    public inputData: {\n        app: {\n            theater?: factory.chevre.place.movieTheater.IPlaceWithoutScreeningRoom;\n            pos?: factory.chevre.place.movieTheater.IPOS;\n            applicationType?: Models.Util.Application.ApplicationType;\n            applicationPassword?: string;\n        };\n        device: {\n            printerType?: Models.Util.Printer.ConnectionType;\n            printerIpAddress?: string;\n            cashchanger?: string;\n            payment?: string;\n        };\n        profile?: factory.person.IProfile;\n    };\n    public appForm: FormGroup;\n    public deviceForm: FormGroup;\n    public profileForm: FormGroup;\n\n    constructor(\n        public epsonEPOSService: EpsonEPOSService,\n        private store: Store<reducers.IState>,\n        private utilService: UtilService,\n        private actionService: ActionService,\n        private masterService: MasterService,\n        private translate: TranslateService,\n        private router: Router,\n        private paymentService: PaymentService,\n        private cinerinoService: CinerinoService,\n        private modal: BsModalService\n    ) {}\n\n    /**\n     * 初期化\n     */\n    public async ngOnInit() {\n        this.user = this.store.pipe(select(reducers.getUser));\n        this.error = this.store.pipe(select(reducers.getError));\n        this.isLoading = this.store.pipe(select(reducers.getLoading));\n        this.posList = [];\n        this.theaters = [];\n        try {\n            this.theaters = await this.masterService.searchMovieTheaters();\n            const {\n                theater,\n                pos,\n                applicationType,\n                applicationPassword,\n                printer,\n                cashchanger,\n                payment,\n                customerContact,\n            } = await this.actionService.user.getData();\n            this.inputData = {\n                app: { theater, pos, applicationType, applicationPassword },\n                device: {\n                    printerType: printer?.connectionType,\n                    printerIpAddress: printer?.ipAddress,\n                    cashchanger,\n                    payment,\n                },\n                profile: customerContact,\n            };\n        } catch (error) {\n            console.error(error);\n            this.router.navigate(['/error']);\n        }\n        try {\n            const { cashchanger } = await this.actionService.user.getData();\n            if (cashchanger !== undefined) {\n                await this.epsonEPOSService.cashchanger.init({\n                    ipAddress: cashchanger,\n                });\n                await this.epsonEPOSService.cashchanger.endDeposit({\n                    endDepositType: 'DEPOSIT_REPAY',\n                });\n                await this.epsonEPOSService.cashchanger.disconnect();\n            }\n        } catch (error) {\n            console.error(error);\n        }\n    }\n\n    /**\n     * 設定変更\n     */\n    public async onSubmit() {\n        Object.keys(this.appForm.controls).forEach((key) => {\n            this.appForm.controls[key].markAsTouched();\n        });\n        Object.keys(this.deviceForm.controls).forEach((key) => {\n            this.deviceForm.controls[key].markAsTouched();\n        });\n        Object.keys(this.profileForm.controls).forEach((key) => {\n            this.profileForm.controls[key].markAsTouched();\n        });\n        if (\n            this.appForm.invalid ||\n            this.deviceForm.invalid ||\n            this.profileForm.invalid\n        ) {\n            this.utilService.openAlert({\n                title: this.translate.instant('common.error'),\n                body: this.translate.instant('setting.alert.validation'),\n            });\n            return;\n        }\n        try {\n            const theaterId = this.appForm.controls.theaterId.value;\n            const posId = this.appForm.controls.posId.value;\n            const theater = this.theaters.find((t) => t.id === theaterId);\n            if (theater === undefined) {\n                throw new Error('theater not found');\n            }\n            const pos =\n                theater.hasPOS === undefined\n                    ? theater.hasPOS\n                    : theater.hasPOS.find((p) => p.id === posId);\n            this.actionService.user.updateAll({\n                pos,\n                theater,\n                profile: {\n                    familyName:\n                        this.profileForm.controls.familyName === undefined\n                            ? undefined\n                            : this.profileForm.controls.familyName.value,\n                    givenName:\n                        this.profileForm.controls.givenName === undefined\n                            ? undefined\n                            : this.profileForm.controls.givenName.value,\n                    email:\n                        this.profileForm.controls.email === undefined\n                            ? undefined\n                            : this.profileForm.controls.email.value,\n                    telephone:\n                        this.profileForm.controls.telephone === undefined\n                            ? undefined\n                            : this.profileForm.controls.telephone.value\n                                  .e164Number,\n                    // ? undefined : this.settingForm.controls.telephone.value,\n                    age:\n                        this.profileForm.controls.age === undefined\n                            ? undefined\n                            : this.profileForm.controls.age.value,\n                    address:\n                        this.profileForm.controls.address === undefined\n                            ? undefined\n                            : this.profileForm.controls.address.value,\n                    gender:\n                        this.profileForm.controls.gender === undefined\n                            ? undefined\n                            : this.profileForm.controls.gender.value,\n                },\n                printer: {\n                    ipAddress: this.deviceForm.controls.printerIpAddress.value,\n                    connectionType: this.deviceForm.controls.printerType.value,\n                },\n                cashchanger:\n                    this.deviceForm.controls.cashchanger.value === undefined\n                        ? undefined\n                        : this.deviceForm.controls.cashchanger.value,\n                payment:\n                    this.deviceForm.controls.payment.value === undefined\n                        ? undefined\n                        : this.deviceForm.controls.payment.value,\n                applicationType: this.appForm.controls.applicationType.value,\n                applicationPassword:\n                    this.appForm.controls.applicationPassword.value,\n            });\n            this.utilService.openAlert({\n                title: this.translate.instant('common.complete'),\n                body: this.translate.instant('setting.alert.success'),\n            });\n        } catch (error) {\n            console.error(error);\n        }\n    }\n\n    /**\n     * 印刷\n     */\n    public async print() {\n        const printer = {\n            connectionType: this.deviceForm.controls.printerType.value,\n            ipAddress: this.deviceForm.controls.printerIpAddress.value,\n        };\n        try {\n            await this.actionService.order.print({ orders: [], printer });\n        } catch (error) {\n            console.error(error);\n            this.utilService.openAlert({\n                title: this.translate.instant('common.error'),\n                body: `\n                <p class=\"mb-4\">${this.translate.instant(\n                    'setting.alert.print'\n                )}</p>\n                    <div class=\"p-3 bg-light-gray select-text\">\n                    <code>${\n                        JSON.stringify(error) === '{}'\n                            ? error\n                            : JSON.stringify(error)\n                    }</code>\n                </div>`,\n            });\n        }\n    }\n\n    /**\n     * 釣銭機連携\n     */\n    public async cashchanger(\n        method:\n            | 'endDeposit'\n            | 'connect'\n            | 'readCounts'\n            | 'collectAll'\n            | 'collectPart'\n    ) {\n        try {\n            const ipAddress = this.deviceForm.controls.cashchanger.value;\n            if (method === 'connect') {\n                await this.epsonEPOSService.cashchanger.init({ ipAddress });\n                await this.epsonEPOSService.cashchanger.disconnect();\n                this.utilService.openAlert({\n                    title: this.translate.instant('common.complete'),\n                    body: this.translate.instant('setting.alert.connection'),\n                });\n            }\n            if (method === 'endDeposit') {\n                await this.epsonEPOSService.cashchanger.init({ ipAddress });\n                await this.epsonEPOSService.cashchanger.endDeposit({\n                    endDepositType: 'DEPOSIT_REPAY',\n                });\n                await this.epsonEPOSService.cashchanger.disconnect();\n            }\n            if (method === 'readCounts') {\n                await this.epsonEPOSService.cashchanger.init({ ipAddress });\n                const counts =\n                    await this.epsonEPOSService.cashchanger.readCounts();\n                await this.epsonEPOSService.cashchanger.disconnect();\n                console.log('counts', counts);\n                this.modal.show(CaschcangerCountModalComponent, {\n                    initialState: {\n                        counts,\n                    },\n                    class: 'modal-dialog-centered modal-lg',\n                });\n            }\n            if (method === 'collectAll' || method === 'collectPart') {\n                this.utilService.openConfirm({\n                    title: this.translate.instant('common.confirm'),\n                    body: this.translate.instant('setting.confirm.collect'),\n                    cb: async () => {\n                        try {\n                            const collectType =\n                                method === 'collectAll'\n                                    ? 'ALL_CASH'\n                                    : 'PART_OF_CASH';\n                            await this.epsonEPOSService.cashchanger.init({\n                                ipAddress,\n                            });\n                            await this.epsonEPOSService.cashchanger.collect({\n                                collectType,\n                            });\n                            await this.epsonEPOSService.cashchanger.disconnect();\n                        } catch (error) {\n                            console.error(error);\n                            this.utilService.openAlert({\n                                title: this.translate.instant('common.error'),\n                                body: '',\n                                error:\n                                    JSON.stringify(error) === '{}'\n                                        ? error\n                                        : JSON.stringify(error),\n                            });\n                        }\n                    },\n                });\n            }\n        } catch (error) {\n            console.error(error);\n            this.utilService.openAlert({\n                title: this.translate.instant('common.error'),\n                body: '',\n                error:\n                    JSON.stringify(error) === '{}'\n                        ? error\n                        : JSON.stringify(error),\n            });\n        }\n    }\n\n    /**\n     * 決済端末連携\n     */\n    public async payment() {\n        try {\n            const ipAddress = this.deviceForm.controls.payment.value;\n            await this.paymentService.init({ ipAddress });\n            const execREsult = await this.paymentService.exec({\n                func: Models.Purchase.Payment.FUNC_CODE.TERMINAL.COMMUNICATION,\n            });\n            console.log(execREsult);\n            this.utilService.openAlert({\n                title: this.translate.instant('common.complete'),\n                body: this.translate.instant('setting.alert.connection'),\n            });\n        } catch (error) {\n            console.error(error);\n            const message = error.message === undefined ? error : error.message;\n            this.utilService.openAlert({\n                title: this.translate.instant('common.error'),\n                body: `\n                <div class=\"p-3 bg-light-gray select-text\">\n                    <code>${message}</code>\n                </div>`,\n            });\n        }\n    }\n\n    public async signOut() {\n        try {\n            await this.cinerinoService.getServices();\n            await this.cinerinoService.signOut();\n        } catch (error) {\n            console.error(error);\n        }\n    }\n}\n","<app-header>\n    <app-page-title title=\"{{ 'setting.title' | translate }}\"></app-page-title>\n</app-header>\n<div class=\"contents\">\n    <div class=\"container h-100 px-3 pb-3\">\n        <div class=\"row h-100\">\n            <div class=\"col-2 h-100\">\n            </div>\n            <div class=\"col-8 h-100 scroll-horizontal\">\n                <p\n                    class=\"text-large font-weight-bold bg-light-gray border-left border-white-bold border-primary p-3 mb-4\">\n                    {{ 'setting.application.title' | translate }}\n                </p>\n                <app-input-app *ngIf=\"inputData?.app\" [theaters]=\"theaters\" [data]=\"inputData?.app\"\n                    (valueChanges)=\"appForm = $event\"></app-input-app>\n                <p\n                    class=\"text-large font-weight-bold bg-light-gray border-left border-white-bold border-primary p-3 mb-4\">\n                    {{ 'setting.device.title' | translate }}\n                </p>\n                <app-input-device *ngIf=\"inputData?.device\" [data]=\"inputData?.device\"\n                    [isConnected]=\"epsonEPOSService.cashchanger.isConnected()\" (valueChanges)=\"deviceForm = $event\"\n                    (print)=\"print()\" (payment)=\"payment()\" (cashchanger)=\"cashchanger($event)\">\n                </app-input-device>\n                <p\n                    class=\"text-large font-weight-bold bg-light-gray border-left border-white-bold border-primary p-3 mb-4\">\n                    {{ 'setting.basic.title' | translate }}\n                </p>\n                <app-input-customer *ngIf=\"inputData\" [profile]=\"inputData.profile\"\n                    [language]=\"(user | async)?.language\" (valueChanges)=\"profileForm = $event\">\n                </app-input-customer>\n\n            </div>\n            <div class=\"col-2\">\n                <button type=\"button\" class=\"btn btn-custom-primary btn-block font-weight-bold\" (click)=\"signOut()\">{{\n                    'setting.signOut'\n                    |\n                    translate }}</button>\n            </div>\n        </div>\n    </div>\n</div>\n<app-footer>\n    <div class=\"container h-100\">\n        <div class=\"row align-items-center justify-content-end h-100\">\n            <div class=\"col-6\">\n\n            </div>\n            <div class=\"col-2\">\n                <button type=\"button\" class=\"btn btn-custom-secondary btn-block py-2\" routerLink=\"/\">\n                    {{ 'common.clear' | translate }}\n                </button>\n            </div>\n            <div class=\"col-2\">\n                <button type=\"button\" class=\"text-large btn btn-custom-secondary btn-block font-weight-bold py-3\"\n                    [routerLink]=\"environment.BASE_URL\">\n                    {{ 'setting.prev' | translate }}\n                </button>\n            </div>\n            <div class=\"col-2\">\n                <button type=\"submit\" class=\"text-large btn btn-custom-primary btn-block font-weight-bold py-3\"\n                    [disabled]=\"isLoading | async\" (click)=\"onSubmit()\">\n                    {{ 'setting.next' | translate }}\n                </button>\n            </div>\n        </div>\n    </div>\n</app-footer>","import {\n    Component,\n    EventEmitter,\n    Input,\n    OnDestroy,\n    OnInit,\n    Output,\n} from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Subscription } from 'rxjs';\nimport { Models } from '../../../../..';\nimport { getEnvironment } from '../../../../../../environments/environment';\n\n@Component({\n    selector: 'app-input-device',\n    templateUrl: './input-device.component.html',\n    styleUrls: ['./input-device.component.scss'],\n})\nexport class InputDeviceComponent implements OnInit, OnDestroy {\n    public environment = getEnvironment();\n    public formGroup: FormGroup;\n    public subscription?: Subscription;\n    public connectionType = Models.Util.Printer.ConnectionType;\n    public printers = Models.Util.Printer.printers;\n    @Input() public data: {\n        printerType?: Models.Util.Printer.ConnectionType;\n        printerIpAddress?: string;\n        cashchanger?: string;\n        payment?: string;\n    };\n    @Input() public isConnected: boolean;\n    @Output() public valueChanges = new EventEmitter<FormGroup>();\n    @Output() public print = new EventEmitter<void>();\n    @Output() public payment = new EventEmitter<void>();\n    @Output() public cashchanger = new EventEmitter<\n        'endDeposit' | 'connect' | 'readCounts' | 'collectAll' | 'collectPart'\n    >();\n\n    constructor(\n        private formBuilder: FormBuilder,\n        private translate: TranslateService\n    ) {}\n\n    public ngOnInit() {\n        this.formGroup = this.createForm();\n        const { printerType, printerIpAddress, cashchanger, payment } =\n            this.data;\n        if (printerType !== undefined) {\n            this.formGroup.controls.printerType.setValue(printerType);\n            this.formGroup.controls.printerIpAddress.setValue(printerIpAddress);\n        }\n        if (cashchanger !== undefined) {\n            this.formGroup.controls.cashchanger.setValue(cashchanger);\n        }\n        if (payment !== undefined) {\n            this.formGroup.controls.payment.setValue(payment);\n        }\n        this.valueChanges.emit(this.formGroup);\n        this.subscription = this.formGroup.valueChanges.subscribe(() => {\n            this.valueChanges.emit(this.formGroup);\n        });\n    }\n\n    public ngOnDestroy() {\n        if (this.subscription === undefined) {\n            return;\n        }\n        this.subscription.unsubscribe();\n    }\n\n    /**\n     * フォーム作成\n     */\n    private createForm() {\n        const formGroup = this.formBuilder.group({\n            printerType: [Models.Util.Printer.ConnectionType.None],\n            printerIpAddress: [''],\n            cashchanger: [''],\n            payment: [''],\n        });\n\n        return formGroup;\n    }\n\n    /**\n     * 必須判定\n     */\n    public isRequired(key: String) {\n        return (\n            this.environment.PROFILE.find(\n                (p) => p.key === key && p.required\n            ) !== undefined\n        );\n    }\n\n    /**\n     * 購入者情報フォームのコントロールkeyを配列で返却\n     */\n    public getProfileFormKeys() {\n        return Object.keys(this.formGroup.controls);\n    }\n\n    /**\n     * プロフィール項目取得\n     */\n    public getProfileProperty(key: string) {\n        return this.environment.PROFILE.find((p) => p.key === key);\n    }\n\n    /**\n     * 追加特性項目取得\n     */\n    public getAdditionalProperty(key: string) {\n        return this.environment.PROFILE.find(\n            (p) => /additionalProperty/.test(p.key) && p.key === key\n        );\n    }\n\n    /**\n     * プリンター変更\n     */\n    public changePrinterType() {\n        if (\n            this.formGroup.controls.printerType.value ===\n            Models.Util.Printer.ConnectionType.StarBluetooth\n        ) {\n            this.formGroup.controls.printerIpAddress.setValue(\n                this.translate.instant('setting.starBluetoothAddress')\n            );\n        }\n    }\n}\n","<form [formGroup]=\"formGroup\">\n    <div class=\"form-group row\">\n        <p class=\"col-4 text-right py-3\">{{ 'setting.device.printer.label' | translate }}</p>\n        <div class=\"col-8\">\n            <select class=\"form-control\" formControlName=\"printerType\" (change)=\"changePrinterType()\">\n                <option *ngFor=\"let printer of printers\" [value]=\"printer.connectionType\">\n                    {{ printer.name | translate }}</option>\n            </select>\n            <button\n                *ngIf=\"this.formGroup.controls.printerType.value && this.formGroup.controls.printerType.value !== connectionType.None\"\n                type=\"button\" class=\"btn btn-sm btn-custom-primary py-2 mt-2\" (click)=\"print.emit()\">{{\n                'setting.device.printer.testPrinting' | translate }}</button>\n        </div>\n    </div>\n    <div class=\"form-group row\">\n        <p class=\"col-4 text-right py-3\">{{ 'setting.device.printer.ipAddress' | translate }}</p>\n        <div class=\"col-8\">\n            <input type=\"text\" class=\"form-control\" formControlName=\"printerIpAddress\" placeholder=\"0.0.0.0\">\n            <div *ngIf=\"formGroup.controls.printerIpAddress.invalid && formGroup.controls.printerIpAddress.touched\"\n                class=\"mt-2\">\n                <p *ngIf=\"formGroup.controls.printerIpAddress.errors?.required\" class=\"text-danger\">\n                    {{ 'form.validation.required' | translate }}</p>\n            </div>\n            <p class=\"text-small mt-2\" [innerHtml]=\"'setting.device.printer.ipAddressDescription' | translate\"></p>\n        </div>\n    </div>\n    <div class=\"form-group row\">\n        <p class=\"col-4 text-right py-3\">{{ 'setting.device.cashchanger.label' | translate }}</p>\n        <div class=\"col-8\">\n            <input type=\"text\" class=\"form-control\" formControlName=\"cashchanger\" placeholder=\"0.0.0.0\">\n            <p class=\"text-small mt-2\" [innerHtml]=\"'setting.device.cashchanger.description' | translate\">\n            </p>\n            <div *ngIf=\"formGroup.controls.cashchanger.invalid && formGroup.controls.cashchanger.touched\" class=\"mt-2\">\n                <p *ngIf=\"formGroup.controls.cashchanger.errors?.required\" class=\"text-danger\">\n                    {{ 'form.validation.required' | translate }}</p>\n            </div>\n            <button type=\"button\" class=\"btn btn-custom-primary mt-2 mr-2\" [disabled]=\"isConnected\"\n                (click)=\"cashchanger.emit('connect')\">{{\n                'setting.device.connect' | translate }}</button>\n            <button type=\"button\" class=\"btn btn-custom-primary mt-2 mr-2\" [disabled]=\"isConnected\"\n                (click)=\"cashchanger.emit('endDeposit')\">{{\n                'setting.device.endDeposit' | translate }}</button>\n            <button type=\"button\" class=\"btn btn-custom-primary mt-2 mr-2\" [disabled]=\"isConnected\"\n                (click)=\"cashchanger.emit('readCounts')\">{{\n                'setting.device.readCounts' | translate }}</button>\n            <button type=\"button\" class=\"btn btn-custom-primary mt-2 mr-2\" [disabled]=\"isConnected\"\n                (click)=\"cashchanger.emit('collectAll')\">{{\n                'setting.device.collectAll' | translate }}</button>\n            <button type=\"button\" class=\"btn btn-custom-primary mt-2\" [disabled]=\"isConnected\"\n                (click)=\"cashchanger.emit('collectPart')\">{{\n                'setting.device.collectPart' | translate }}</button>\n        </div>\n    </div>\n    <div class=\"form-group row\">\n        <p class=\"col-4 text-right py-3\">{{ 'setting.device.payment.label' | translate }}</p>\n        <div class=\"col-8\">\n            <input type=\"text\" class=\"form-control\" formControlName=\"payment\" placeholder=\"0.0.0.0\">\n            <div *ngIf=\"formGroup.controls.payment.invalid && formGroup.controls.payment.touched\" class=\"mt-2\">\n                <p *ngIf=\"formGroup.controls.payment.errors?.required\" class=\"text-danger\">\n                    {{ 'form.validation.required' | translate }}</p>\n            </div>\n            <button type=\"button\" class=\"btn btn-custom-primary mt-2\" [disabled]=\"isConnected\"\n                (click)=\"payment.emit()\">{{\n                'setting.device.connect' | translate }}</button>\n        </div>\n    </div>\n</form>"],"sourceRoot":"webpack:///"}